---
Linear Components
0	DOSAGE
1	SEX
2	RACE_1
3	RACE_2
4	RACE_3
5	RACE_4
6	RACE_5
7	RACE_6
8	COUNTY_1
9	COUNTY_10
10	COUNTY_11
11	COUNTY_12
12	COUNTY_13
13	COUNTY_14
14	COUNTY_15
15	COUNTY_16
16	COUNTY_17
17	COUNTY_18
18	COUNTY_19
19	COUNTY_2
20	COUNTY_20
21	COUNTY_21
22	COUNTY_22
23	COUNTY_23
24	COUNTY_24
25	COUNTY_25
26	COUNTY_26
27	COUNTY_27
28	COUNTY_28
29	COUNTY_29
30	COUNTY_3
31	COUNTY_30
32	COUNTY_31
33	COUNTY_32
34	COUNTY_33
35	COUNTY_34
36	COUNTY_35
37	COUNTY_36
38	COUNTY_37
39	COUNTY_38
40	COUNTY_39
41	COUNTY_4
42	COUNTY_40
43	COUNTY_41
44	COUNTY_42
45	COUNTY_43
46	COUNTY_44
47	COUNTY_45
48	COUNTY_46
49	COUNTY_47
50	COUNTY_48
51	COUNTY_49
52	COUNTY_5
53	COUNTY_50
54	COUNTY_51
55	COUNTY_52
56	COUNTY_53
57	COUNTY_54
58	COUNTY_55
59	COUNTY_56
60	COUNTY_57
61	COUNTY_58
62	COUNTY_59
63	COUNTY_6
64	COUNTY_60
65	COUNTY_61
66	COUNTY_62
67	COUNTY_63
68	COUNTY_64
69	COUNTY_65
70	COUNTY_66
71	COUNTY_67
72	COUNTY_7
73	COUNTY_8
---
Linear Regression...
R2 Score (Val / Test) 
0.014026 0.023105 
MSE (Val / Test)9033.672256 34685.124985 
Coefficients
[-0.96455031 -0.01286465 -0.0158927   0.03463432 -0.01469765  0.00669997
 -0.05092104 -0.09782303  0.03996307 -0.05322459 -0.02450185 -0.05526975
 -0.05537146 -0.04846396 -0.03159641  0.03934307 -0.05230857 -0.05604478
 -0.05083134 -0.02829966 -0.05299704 -0.0436854  -0.00530506  0.06842455
 -0.03745112 -0.02244687 -0.02814832  0.05013268 -0.01701116 -0.02970574
 -0.04357306 -0.04111293 -0.0555771  -0.03476711 -0.05311497 -0.00186823
 -0.0277765   0.1269923  -0.05732788 -0.01152835  0.17379893 -0.04549043
 -0.02888977 -0.05442951 -0.05869042 -0.0448632  -0.04298258 -0.03874397
 -0.04208422 -0.05943034  0.27395597  0.04118202 -0.04876327 -0.02828963
  0.11345128 -0.04640559 -0.03531612 -0.03959475 -0.04042253 -0.04673043
 -0.05368854 -0.04220332 -0.04025378 -0.03748602 -0.04300249 -0.01069106
 -0.04905659 -0.06378948 -0.03760692 -0.04730546 -0.04615916  0.04267938
 -0.0629393  -0.05180641]
Intercept
-3.6118715741
---

Call:
function (formula, data, subset, weights, na.action, method = "qr", 
    model = TRUE, x = FALSE, y = FALSE, qr = TRUE, singular.ok = TRUE, 
    contrasts = NULL, offset, ...) 
{
    ret.x <- x
    ret.y <- y
    cl <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action", 
        "offset"), names(mf), 0L)
    mf <- mf[c(1L, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1L]] <- as.name("model.frame")
    mf <- eval(mf, parent.frame())
    if (method == "model.frame") 
        return(mf)
    else if (method != "qr") 
        warning(gettextf("method = '%s' is not supported. Using 'qr'", 
            method), domain = NA)
    mt <- attr(mf, "terms")
    y <- model.response(mf, "numeric")
    w <- as.vector(model.weights(mf))
    if (!is.null(w) && !is.numeric(w)) 
        stop("'weights' must be a numeric vector")
    offset <- as.vector(model.offset(mf))
    if (!is.null(offset)) {
        if (length(offset) != NROW(y)) 
            stop(gettextf("number of offsets is %d, should equal %d (number of observations)", 
                length(offset), NROW(y)), domain = NA)
    }
    if (is.empty.model(mt)) {
        x <- NULL
        z <- list(coefficients = if (is.matrix(y)) matrix(, 0, 
            3) else numeric(), residuals = y, fitted.values = 0 * 
            y, weights = w, rank = 0L, df.residual = if (!is.null(w)) sum(w != 
            0) else if (is.matrix(y)) nrow(y) else length(y))
        if (!is.null(offset)) {
            z$fitted.values <- offset
            z$residuals <- y - offset
        }
    }
    else {
        x <- model.matrix(mt, mf, contrasts)
        z <- if (is.null(w)) 
            lm.fit(x, y, offset = offset, singular.ok = singular.ok, 
                ...)
        else lm.wfit(x, y, w, offset = offset, singular.ok = singular.ok, 
            ...)
    }
    class(z) <- c(if (is.matrix(y)) "mlm", "lm")
    z$na.action <- attr(mf, "na.action")
    z$offset <- offset
    z$contrasts <- attr(x, "contrasts")
    z$xlevels <- .getXlevels(mt, mf)
    z$call <- cl
    z$terms <- mt
    if (model) 
        z$model <- mf
    if (ret.x) 
        z$x <- x
    if (ret.y) 
        z$y <- y
    if (!qr) 
        z$qr <- NULL
    z
}(formula = "y ~ x0 + x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10 + x11 + x12 + x13 + x14 + x15 + x16 + x17 + x18 + x19 + x20 + x21 + x22 + x23 + x24 + x25 + x26 + x27 + x28 + x29 + x30 + x31 + x32 + x33 + x34 + x35 + x36 + x37 + x38 + x39 + x40 + x41 + x42 + x43 + x44 + x45 + x46 + x47 + x48 + x49 + x50 + x51 + x52 + x53 + x54 + x55 + x56 + x57 + x58 + x59 + x60 + x61 + x62 + x63 + x64 + x65 + x66 + x67 + x68 + x69 + x70 + x71 + x72 + x73")

Residuals:
    Min      1Q  Median      3Q     Max 
-0.8087 -0.2033 -0.0828 -0.0236 11.0452 

Coefficients:
             Estimate Std. Error t value Pr(>|t|)    
(Intercept) -3.611872   1.299825  -2.779 0.005460 ** 
x0          -0.964550   0.390059  -2.473 0.013410 *  
x1          -0.012865   0.009714  -1.324 0.185404    
x2          -0.015893   0.020365  -0.780 0.435165    
x3           0.034634   0.021083   1.643 0.100445    
x4          -0.014698   0.023664  -0.621 0.534544    
x5           0.006700   0.057146   0.117 0.906668    
x6          -0.050921   0.114316  -0.445 0.656006    
x7          -0.097823   0.075379  -1.298 0.194381    
x8           0.039963   0.044724   0.894 0.371568    
x9          -0.053225   0.032520  -1.637 0.101712    
x10         -0.024502   0.042549  -0.576 0.564721    
x11         -0.055270   0.115274  -0.479 0.631613    
x12         -0.055371   0.040998  -1.351 0.176842    
x13         -0.048464   0.041292  -1.174 0.240526    
x14         -0.031596   0.022263  -1.419 0.155834    
x15          0.039343   0.067489   0.583 0.559927    
x16         -0.052309   0.042613  -1.228 0.219638    
x17         -0.056045   0.056484  -0.992 0.321095    
x18         -0.050831   0.070153  -0.725 0.468719    
x19         -0.028300   0.017315  -1.634 0.102192    
x20         -0.052997   0.033414  -1.586 0.112733    
x21         -0.043685   0.026633  -1.640 0.100959    
x22         -0.005305   0.020738  -0.256 0.798098    
x23          0.068425   0.018487   3.701 0.000215 ***
x24         -0.037451   0.061935  -0.605 0.545393    
x25         -0.022447   0.023786  -0.944 0.345331    
x26         -0.028148   0.036112  -0.779 0.435703    
x27          0.050133   0.102372   0.490 0.624342    
x28         -0.017011   0.034459  -0.494 0.621549    
x29         -0.029706   0.112774  -0.263 0.792236    
x30         -0.043573   0.046490  -0.937 0.348634    
x31         -0.041113   0.036992  -1.111 0.266404    
x32         -0.055577   0.052760  -1.053 0.292166    
x33         -0.034767   0.049561  -0.702 0.482992    
x34         -0.053115   0.056493  -0.940 0.347119    
x35         -0.001868   0.117944  -0.016 0.987362    
x36         -0.027777   0.026460  -1.050 0.293843    
x37          0.126992   0.021076   6.025 1.71e-09 ***
x38         -0.057328   0.037799  -1.517 0.129367    
x39         -0.011528   0.028817  -0.400 0.689115    
x40          0.173799   0.022417   7.753 9.25e-15 ***
x41         -0.045490   0.031285  -1.454 0.145940    
x42         -0.028890   0.026100  -1.107 0.268349    
x43         -0.054430   0.029279  -1.859 0.063041 .  
x44         -0.058690   0.043646  -1.345 0.178733    
x45         -0.044863   0.035888  -1.250 0.211282    
x46         -0.042983   0.045939  -0.936 0.349468    
x47         -0.038744   0.035433  -1.093 0.274209    
x48         -0.042084   0.019995  -2.105 0.035324 *  
x49         -0.059430   0.100616  -0.591 0.554749    
x50          0.273956   0.026864  10.198  < 2e-16 ***
x51          0.041182   0.042713   0.964 0.334975    
x52         -0.048763   0.065604  -0.743 0.457308    
x53         -0.028290   0.044383  -0.637 0.523869    
x54          0.113451   0.017499   6.483 9.11e-11 ***
x55         -0.046406   0.047860  -0.970 0.332253    
x56         -0.035316   0.077904  -0.453 0.650315    
x57         -0.039595   0.027548  -1.437 0.150648    
x58         -0.040423   0.054638  -0.740 0.459414    
x59         -0.046730   0.048686  -0.960 0.337146    
x60         -0.053689   0.179460  -0.299 0.764815    
x61         -0.042203   0.057916  -0.729 0.466194    
x62         -0.040254   0.062689  -0.642 0.520802    
x63         -0.037486   0.020573  -1.822 0.068444 .  
x64         -0.043002   0.071809  -0.599 0.549281    
x65         -0.010691   0.032759  -0.326 0.744157    
x66         -0.049057   0.062690  -0.783 0.433911    
x67         -0.063789   0.030575  -2.086 0.036956 *  
x68         -0.037607   0.056760  -0.663 0.507620    
x69         -0.047305   0.028064  -1.686 0.091877 .  
x70         -0.046159   0.061942  -0.745 0.456158    
x71          0.042679   0.018501   2.307 0.021066 *  
x72         -0.062939   0.038307  -1.643 0.100393    
x73         -0.051806   0.037467  -1.383 0.166761    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

Residual standard error: 1.074 on 30095 degrees of freedom
Multiple R-squared: 0.02311,	Adjusted R-squared: 0.0207 
F-statistic: 9.619 on 74 and 30095 DF,  p-value: < 2.2e-16 


[1] 89978.35

Test: 0.0231053813336
Val: 0.0140256752929
